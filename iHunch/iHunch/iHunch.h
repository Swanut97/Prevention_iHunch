#pragma once

#include <QtWidgets/QMainWindow>
#include "ui_iHunch.h"
#include <QSystemTrayIcon>
#include <QCloseEvent>
#include <QAction>
#include <QWidget>
#include <QMenu>
#include <QMovie>
#include <QStyle>
#include <QProcess>
#include <Windows.h>
#include <QMultimedia>
#include "setupPose.h"
#include <QMediaPlayer>
#include <QFileDialog>

QT_BEGIN_NAMESPACE
namespace Ui { class iHunchClass; }
QT_END_NAMESPACE

class iHunch : public QMainWindow
{
    Q_OBJECT

public:
    iHunch(QWidget *parent = Q_NULLPTR);
    ~iHunch();
    //ï¿½ï¿½ï¿?È®ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½
    int modeflag;
    //ï¿½Ë¶ï¿½ È£ï¿½ï¿½ï¿½Ô¼ï¿½
 //   void alramMessage();

private:
    Ui::iHunchClass* ui;
    //Æ®ï¿½ï¿½ï¿½Ì¾ï¿½ï¿½ï¿½ï¿½ï¿½ Å¬ï¿½ï¿½ï¿½ï¿½ ï¿½Î½ï¿½ï¿½Ï½ï¿½
    QSystemTrayIcon* m_trayicon;
    setupPose* setuppose;
    QComboBox* timeIntervalComboBox;
    QComboBox* unHealthComboBox;
    QSlider* poseFixSlider;

    //ï¿½ï¿½ï¿½Û¹ï¿½Æ°
    bool started = false;
    //È¿ï¿½ï¿½ï¿½ï¿½
    QMediaPlayer* m_player;
    //ï¿½Ë¶ï¿½ Ã¼Å©ï¿½Ú½ï¿½ Ã¼Å© ï¿½Ç¾ï¿½ï¿½Ö´ï¿½ï¿½ï¿½
    bool sound_check;
    bool popup_check;
    //Ã¢ drag and drop ï¿½Ìµï¿½
    int mouseX;
    int mouseY;
    int absX;
    int absY;
    int justOneCount;

public slots:
    //ï¿½Ã½ï¿½ï¿½ï¿½ Æ®ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ Å¬ï¿½ï¿½ ï¿½Ìºï¿½Æ®ï¿½Îºï¿½ï¿½ï¿½ ï¿½Ã±×³ï¿½ï¿½ï¿½ Ã³ï¿½ï¿½ï¿½Ï´ï¿½ slotï¿½Ô¼ï¿½
    void iconActivated(QSystemTrayIcon::ActivationReason reason);

    //ï¿½Ú¼ï¿½ ï¿½ï¿½ï¿½ï¿½ Ã¢ ï¿½ï¿½ï¿½ï¿½
    void setPose();
    void modeChanged(int mode);

    //ï¿½ï¿½ï¿½Û¹ï¿½Æ°
    void mybtn();

    //ï¿½ï¿½ï¿½Î¸ï¿½ï¿½ï¿½ ï¿½Ö¼ï¿½È­, ï¿½Ý±ï¿½ï¿½Æ?
    void minimum_Btn();
    void close_Btn();

    //Ã¢ drag and drop ï¿½Ìµï¿½
    void mouseMoveEvent(QMouseEvent* mouse);
    void mouseReleaseEvent(QMouseEvent* event);

    void alramMessage();

signals:
    void threadStart();
};